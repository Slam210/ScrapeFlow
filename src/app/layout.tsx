import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ClerkProvider, SignedIn, UserButton } from "@clerk/nextjs";
import { Toaster } from "@/components/ui/sonner";
import { AppProviders } from "@/components/providers/AppProvider";
import { DesktopSidebar } from "@/components/Sidebar";
import BreadCrumbHeader from "@/components/BreadCrumbHeader";
import { ModeToggle } from "@/components/ThemeModeToggle";
import { Separator } from "@/components/ui/separator";
import React from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

/**
 * App root layout that wraps application pages with global providers, navigation, and UI shell.
 *
 * Renders global providers (ClerkProvider and AppProviders), registers Geist fonts via CSS variables,
 * and composes the persistent sidebar, top header (breadcrumb + theme toggle + authenticated user button),
 * a scrollable content region for `children`, and a global Toaster for notifications.
 *
 * The ClerkProvider is configured to redirect to `/sign-in` after sign-out and applies a custom primary
 * form button appearance. The user button in the header is only rendered for authenticated users.
 *
 * @param children - The page content to render inside the layout's scrollable main area.
 * @returns The application layout JSX element.
 */
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider
      afterSignOutUrl={"/sign-in"}
      appearance={{
        elements: {
          formButtonPrimary: "bg-primary hover:bg-primary/90 !shadow-none",
        },
      }}
    >
      <html lang="en" suppressHydrationWarning>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <AppProviders>
            <div className="flex h-screen">
              {/* Sidebar */}
              <DesktopSidebar />

              {/* Main Content Area */}
              <div className="flex flex-col flex-1 min-h-0">
                {/* Header */}
                <header className="flex items-center justify-between px-6 py-4 h-[50px] container">
                  <BreadCrumbHeader />
                  <div className="gap-1 flex items-center">
                    <ModeToggle />
                    <SignedIn>
                      <UserButton />
                    </SignedIn>
                  </div>
                </header>

                <Separator />

                {/* Scrollable content */}
                <div className="flex-1 overflow-auto min-h-0">
                  <div className="container py-4 text-accent-foreground">
                    {children}
                  </div>
                </div>
              </div>
            </div>
          </AppProviders>
          <Toaster richColors />
        </body>
      </html>
    </ClerkProvider>
  );
}
